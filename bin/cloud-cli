#!/usr/bin/env ruby
# frozen_string_literal: true

#==============================================================================
# Copyright (C) 2019-present Alces Flight Ltd.
#
# This file is part of Flight Cloud.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# Flight Cloud is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with Flight Cloud. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on Flight Cloud, please visit:
# https://github.com/openflighthpc/flight-cloud
#===============================================================================

lib_dir = File.join(__dir__, '..', 'lib')
$LOAD_PATH << File.join(lib_dir)
ENV['BUNDLE_GEMFILE'] ||= File.join(__dir__, '..', 'Gemfile')

Thread.report_on_exception = false

require 'rubygems'
require 'bundler'

# Catch any config errors during the require/setup
begin
  # Require the config and associated gems
  Bundler.setup(:config)
  require 'cloudware/config'

  # Require the development gems
  if Cloudware::Config.debug
    # `pry` needs to be required in a specific order so it doesn't clash with `pp`
    Bundler.setup(:development)
    require 'pp'
    require 'pry'
    require 'pry-byebug'
  end

  # Setup the load path for remaining gems
  Bundler.setup(:config, :default, Cloudware::Config.provider)

  require 'cloudware'
rescue => e
  $stderr.puts e.message
  exit 1
end

Cloudware::CLI.run! if $PROGRAM_NAME == __FILE__
